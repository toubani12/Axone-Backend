package com.axone.hrsolution.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TechCVAchievementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVAchievementAllPropertiesEquals(TechCVAchievement expected, TechCVAchievement actual) {
        assertTechCVAchievementAutoGeneratedPropertiesEquals(expected, actual);
        assertTechCVAchievementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVAchievementAllUpdatablePropertiesEquals(TechCVAchievement expected, TechCVAchievement actual) {
        assertTechCVAchievementUpdatableFieldsEquals(expected, actual);
        assertTechCVAchievementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVAchievementAutoGeneratedPropertiesEquals(TechCVAchievement expected, TechCVAchievement actual) {
        assertThat(expected)
            .as("Verify TechCVAchievement auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVAchievementUpdatableFieldsEquals(TechCVAchievement expected, TechCVAchievement actual) {
        assertThat(expected)
            .as("Verify TechCVAchievement relevant properties")
            .satisfies(e -> assertThat(e.getAchievement()).as("check achievement").isEqualTo(actual.getAchievement()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVAchievementUpdatableRelationshipsEquals(TechCVAchievement expected, TechCVAchievement actual) {
        assertThat(expected)
            .as("Verify TechCVAchievement relationships")
            .satisfies(e -> assertThat(e.getTechnicalCV()).as("check technicalCV").isEqualTo(actual.getTechnicalCV()));
    }
}
