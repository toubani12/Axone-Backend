package com.axone.hrsolution.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TechCVHardSkillsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVHardSkillsAllPropertiesEquals(TechCVHardSkills expected, TechCVHardSkills actual) {
        assertTechCVHardSkillsAutoGeneratedPropertiesEquals(expected, actual);
        assertTechCVHardSkillsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVHardSkillsAllUpdatablePropertiesEquals(TechCVHardSkills expected, TechCVHardSkills actual) {
        assertTechCVHardSkillsUpdatableFieldsEquals(expected, actual);
        assertTechCVHardSkillsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVHardSkillsAutoGeneratedPropertiesEquals(TechCVHardSkills expected, TechCVHardSkills actual) {
        assertThat(expected)
            .as("Verify TechCVHardSkills auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVHardSkillsUpdatableFieldsEquals(TechCVHardSkills expected, TechCVHardSkills actual) {
        assertThat(expected)
            .as("Verify TechCVHardSkills relevant properties")
            .satisfies(e -> assertThat(e.getSkills()).as("check skills").isEqualTo(actual.getSkills()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVHardSkillsUpdatableRelationshipsEquals(TechCVHardSkills expected, TechCVHardSkills actual) {
        assertThat(expected)
            .as("Verify TechCVHardSkills relationships")
            .satisfies(e -> assertThat(e.getTechnicalCV()).as("check technicalCV").isEqualTo(actual.getTechnicalCV()));
    }
}
