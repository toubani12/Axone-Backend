package com.axone.hrsolution.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TechCVAltActivitiesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVAltActivitiesAllPropertiesEquals(TechCVAltActivities expected, TechCVAltActivities actual) {
        assertTechCVAltActivitiesAutoGeneratedPropertiesEquals(expected, actual);
        assertTechCVAltActivitiesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVAltActivitiesAllUpdatablePropertiesEquals(TechCVAltActivities expected, TechCVAltActivities actual) {
        assertTechCVAltActivitiesUpdatableFieldsEquals(expected, actual);
        assertTechCVAltActivitiesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVAltActivitiesAutoGeneratedPropertiesEquals(TechCVAltActivities expected, TechCVAltActivities actual) {
        assertThat(expected)
            .as("Verify TechCVAltActivities auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVAltActivitiesUpdatableFieldsEquals(TechCVAltActivities expected, TechCVAltActivities actual) {
        assertThat(expected)
            .as("Verify TechCVAltActivities relevant properties")
            .satisfies(e -> assertThat(e.getActivities()).as("check activities").isEqualTo(actual.getActivities()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVAltActivitiesUpdatableRelationshipsEquals(TechCVAltActivities expected, TechCVAltActivities actual) {
        assertThat(expected)
            .as("Verify TechCVAltActivities relationships")
            .satisfies(e -> assertThat(e.getTechnicalCV()).as("check technicalCV").isEqualTo(actual.getTechnicalCV()));
    }
}
