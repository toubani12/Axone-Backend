package com.axone.hrsolution.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TechCVEducationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVEducationAllPropertiesEquals(TechCVEducation expected, TechCVEducation actual) {
        assertTechCVEducationAutoGeneratedPropertiesEquals(expected, actual);
        assertTechCVEducationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVEducationAllUpdatablePropertiesEquals(TechCVEducation expected, TechCVEducation actual) {
        assertTechCVEducationUpdatableFieldsEquals(expected, actual);
        assertTechCVEducationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVEducationAutoGeneratedPropertiesEquals(TechCVEducation expected, TechCVEducation actual) {
        assertThat(expected)
            .as("Verify TechCVEducation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVEducationUpdatableFieldsEquals(TechCVEducation expected, TechCVEducation actual) {
        assertThat(expected)
            .as("Verify TechCVEducation relevant properties")
            .satisfies(e -> assertThat(e.getEducation()).as("check education").isEqualTo(actual.getEducation()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechCVEducationUpdatableRelationshipsEquals(TechCVEducation expected, TechCVEducation actual) {
        assertThat(expected)
            .as("Verify TechCVEducation relationships")
            .satisfies(e -> assertThat(e.getTechnicalCV()).as("check technicalCV").isEqualTo(actual.getTechnicalCV()));
    }
}
