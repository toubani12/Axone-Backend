package com.axone.hrsolution.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProviderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProviderAllPropertiesEquals(Provider expected, Provider actual) {
        assertProviderAutoGeneratedPropertiesEquals(expected, actual);
        assertProviderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProviderAllUpdatablePropertiesEquals(Provider expected, Provider actual) {
        assertProviderUpdatableFieldsEquals(expected, actual);
        assertProviderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProviderAutoGeneratedPropertiesEquals(Provider expected, Provider actual) {
        assertThat(expected)
            .as("Verify Provider auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProviderUpdatableFieldsEquals(Provider expected, Provider actual) {
        assertThat(expected)
            .as("Verify Provider relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCountry()).as("check country").isEqualTo(actual.getCountry()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProviderUpdatableRelationshipsEquals(Provider expected, Provider actual) {
        assertThat(expected)
            .as("Verify Provider relationships")
            .satisfies(e -> assertThat(e.getAppAccounts()).as("check appAccounts").isEqualTo(actual.getAppAccounts()));
    }
}
