package com.axone.hrsolution.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DomainAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDomainAllPropertiesEquals(Domain expected, Domain actual) {
        assertDomainAutoGeneratedPropertiesEquals(expected, actual);
        assertDomainAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDomainAllUpdatablePropertiesEquals(Domain expected, Domain actual) {
        assertDomainUpdatableFieldsEquals(expected, actual);
        assertDomainUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDomainAutoGeneratedPropertiesEquals(Domain expected, Domain actual) {
        assertThat(expected)
            .as("Verify Domain auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDomainUpdatableFieldsEquals(Domain expected, Domain actual) {
        assertThat(expected)
            .as("Verify Domain relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDomainUpdatableRelationshipsEquals(Domain expected, Domain actual) {
        assertThat(expected)
            .as("Verify Domain relationships")
            .satisfies(e -> assertThat(e.getRecruiters()).as("check recruiters").isEqualTo(actual.getRecruiters()))
            .satisfies(e -> assertThat(e.getCandidates()).as("check candidates").isEqualTo(actual.getCandidates()))
            .satisfies(e -> assertThat(e.getApplications()).as("check applications").isEqualTo(actual.getApplications()))
            .satisfies(e -> assertThat(e.getEmployer()).as("check employer").isEqualTo(actual.getEmployer()));
    }
}
