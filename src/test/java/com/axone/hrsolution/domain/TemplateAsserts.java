package com.axone.hrsolution.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TemplateAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTemplateAllPropertiesEquals(Template expected, Template actual) {
        assertTemplateAutoGeneratedPropertiesEquals(expected, actual);
        assertTemplateAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTemplateAllUpdatablePropertiesEquals(Template expected, Template actual) {
        assertTemplateUpdatableFieldsEquals(expected, actual);
        assertTemplateUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTemplateAutoGeneratedPropertiesEquals(Template expected, Template actual) {
        assertThat(expected)
            .as("Verify Template auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTemplateUpdatableFieldsEquals(Template expected, Template actual) {
        assertThat(expected)
            .as("Verify Template relevant properties")
            .satisfies(e -> assertThat(e.getLabel()).as("check label").isEqualTo(actual.getLabel()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getStandard()).as("check standard").isEqualTo(actual.getStandard()))
            .satisfies(e -> assertThat(e.getDocLink()).as("check docLink").isEqualTo(actual.getDocLink()))
            .satisfies(
                e -> assertThat(e.getDocLinkContentType()).as("check docLink contenty type").isEqualTo(actual.getDocLinkContentType())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTemplateUpdatableRelationshipsEquals(Template expected, Template actual) {
        assertThat(expected)
            .as("Verify Template relationships")
            .satisfies(e -> assertThat(e.getOwner()).as("check owner").isEqualTo(actual.getOwner()))
            .satisfies(e -> assertThat(e.getApplications()).as("check applications").isEqualTo(actual.getApplications()));
    }
}
